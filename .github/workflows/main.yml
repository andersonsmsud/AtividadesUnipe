# Nome do fluxo de trabalho
name: CI/CD Pipeline em 3 Tarefas

# Gatilho: Roda em pushes para a branch 'main'
on:
  push:
    branches: [ main ]

# Permiss√µes necess√°rias para a Tarefa 3 (Publicar no GitHub Pages)
permissions:
  contents: read
  pages: write
  id-token: write

# Agrupamento de todas as tarefas (Jobs)
jobs:
  # --- TAREFA 1: TESTAR ---
  testar:
    name: 1. Testar o c√≥digo
    runs-on: ubuntu-latest
    steps:
      - name: Baixar o c√≥digo do reposit√≥rio
        uses: actions/checkout@v4

      # Simula√ß√£o de um passo de teste. Para um site simples,
      # voc√™ poderia usar um "linter" para verificar HTML/CSS.
      # Por enquanto, vamos apenas simular um sucesso.
      - name: Rodar testes e verifica√ß√µes de qualidade
        run: echo "‚úÖ Testes passaram!"

  # --- TAREFA 2: CONSTRUIR ---
  construir:
    name: 2. Construir o site
    runs-on: ubuntu-latest
    # IMPORTANTE: Esta tarefa s√≥ roda se a tarefa 'testar' for bem-sucedida
    needs: testar
    steps:
      - name: Baixar o c√≥digo do reposit√≥rio
        uses: actions/checkout@v4

      # Aqui voc√™ colocaria os comandos para construir seu site
      # (ex: minificar CSS/JS). Vamos simular a cria√ß√£o dos arquivos.
      - name: Construir os arquivos do site
        run: |
          mkdir ./site
          cp receita.html ./site/receita.html
          echo "üì¶ Site constru√≠do na pasta 'site'."

      # Salva o resultado da constru√ß√£o (a pasta 'site') como um "artefato"
      # para que a pr√≥xima tarefa possa us√°-lo.
      - name: Salvar artefato da constru√ß√£o
        uses: actions/upload-pages-artifact@v3
        with:
          path: './site'

  # --- TAREFA 3: PUBLICAR ---
  publicar:
    name: 3. Publicar no GitHub Pages
    runs-on: ubuntu-latest
    # IMPORTANTE: Esta tarefa s√≥ roda se a tarefa 'construir' for bem-sucedida
    needs: construir
    steps:
      # Pega o artefato salvo na tarefa anterior e o prepara para publica√ß√£o
      - name: Publicar o site
        uses: actions/deploy-pages@v4
